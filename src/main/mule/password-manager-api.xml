<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:java="http://www.mulesoft.org/schema/mule/java" xmlns:oauth2-provider="http://www.mulesoft.org/schema/mule/oauth2-provider" xmlns:s3="http://www.mulesoft.org/schema/mule/s3" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd http://www.mulesoft.org/schema/mule/oauth2-provider http://www.mulesoft.org/schema/mule/oauth2-provider/current/mule-oauth2-provider.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/java http://www.mulesoft.org/schema/mule/java/current/mule-java.xsd http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd http://www.mulesoft.org/schema/mule/s3 http://www.mulesoft.org/schema/mule/s3/current/mule-s3.xsd">
    <!-- 
    	********************************************************************************
    	**		API MAIN FLOW														  **
    	********************************************************************************
	-->
    <flow name="password-manager-api-main" doc:id="552b5356-b2e3-494a-9c5b-3bbd177958bb">
        <!-- <http:listener doc:name="Listener" doc:id="e38920ae-9809-4c37-aeae-185d5dcbfe4c" config-ref="${secure::password-manager-api.anypoint.listener.config-ref}" path="${secure::password-manager-api.anypoint.base-path}"> -->
        <http:listener doc:name="Listener" doc:id="7525f939-018f-4f9b-8850-44f4f64d427c" config-ref="password-manager-api-https" path="${secure::password-manager-api.anypoint.base-path}/*">
            <non-repeatable-stream />
            <http:response statusCode="#[vars.httpStatus default 200]" reasonPhrase="#[vars.reasonPhrase default &quot;OK&quot;]">
                <http:headers><![CDATA[#[output application/java
---
{
	"x-correlation-id" : vars.logHeader.correlation_id
}]]]></http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]" reasonPhrase="#[vars.reasonPhrase default &quot;Internal Server Error&quot;]">
                <http:headers><![CDATA[#[output application/java
---
{
	"x-correlation-id" : vars.logHeader.correlation_id
}]]]></http:headers>
            </http:error-response>
        </http:listener>
        <flow-ref doc:name="common-utilities.InitRequest" doc:id="4f9f16fd-4b0d-4fee-91b1-96575499be37" name="common-utilities.InitRequest" />
        <apikit:router doc:name="APIkit Router" doc:id="efa9ffbc-cc4b-4715-a8e2-dd2a8edeab3f" config-ref="password-manager-api-router" />
    </flow>
    <!-- 
    	********************************************************************************
    	**		DO AUTH FLOW					         					          **
    	********************************************************************************
	-->
    <flow name="post:\actions\auth:application\json:password-manager-api-router">
        <logger level="DEBUG" doc:name="Start Logger" doc:id="f369ad60-cd97-48f2-9a1c-32f30b2d0f94" message="#[%dw 2.0 output application/json --- vars.logHeader ++ {&quot;event&quot;: &quot;Start flow Do Auth&quot;}]" category="com.ase.ism.diagnostics" />
        <ee:transform doc:name="Set passphraseHash" doc:id="16db942d-5f6a-4b7c-bbd1-256fbf762f18">
            <ee:variables>
                <ee:set-variable variableName="passphraseHash"><![CDATA[%dw 2.0
output application/java

import java!ro::ase::ism::crypto::MessageDigestUtils
import java!ro::ase::ism::crypto::CryptoUtils
---
CryptoUtils::byteToBase64(MessageDigestUtils::getStringHash(vars.inputPayload.passphrase, "SHA-256"))]]></ee:set-variable>
            </ee:variables>
        </ee:transform>
        <ee:transform doc:name="Set systemApi, payload" doc:id="1b48feed-0129-4173-a979-f81918de707c">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/java
---
null]]></ee:set-payload>
            </ee:message>
            <ee:variables>
                <ee:set-variable variableName="systemApi"><![CDATA[%dw 2.0
output application/json
---
{
	protocol: "HTTP",
	http_method: "POST",
	base_path: "",
	host: "mule-worker-internal-password-manager-api.us-e2.cloudhub.io",
	port: "8091",
	path: "/token",
	custom_headers: {
		client_id: vars.clientId,
		client_secret: vars.passphraseHash,
		grant_type: "${secure::oauth.grant-types.client-credentials}"
	}
}]]></ee:set-variable>
            </ee:variables>
        </ee:transform>
        <try doc:name="Try" doc:id="a8d74104-c256-4286-bcd0-7b9db8114ed0">
            <oauth2-provider:create-client doc:name="Create client" doc:id="5d612e5e-d329-46d6-b5b3-242d7090c7aa" config-ref="oauth2-provider-config" clientId="#[vars.clientId]" type="CONFIDENTIAL" secret="#[vars.passphraseHash]" authorizedGrantTypes="#[[&quot;CLIENT_CREDENTIALS&quot;]]" failIfPresent="true" />
            <error-handler>
                <on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="c23a2714-3b37-445e-bcea-de4f31c026e4" type="ANY">
                    <logger level="DEBUG" doc:name="Info Logger" doc:id="799754b6-a50d-41b0-8760-9716f9421a03" message="#[%dw 2.0 output application/json --- vars.logHeader ++ {&quot;event&quot;: &quot;Client already registered.&quot;}]" category="com.ase.ism.diagnostics" />
                </on-error-continue>
            </error-handler>
        </try>
        <flow-ref doc:name="common-utilities.callSystemApi" doc:id="250077d8-5640-4877-b671-165d3bcb8da8" name="common-utilities.callSystemApi" />
        <ee:transform doc:name="Set response">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	meta: {
		status: "succeeded",
		messages: [{
			code: "OK",
			text: "Request was successful",
			level: "info"
		}]
	},
	data: {
		access_token: payload.access_token,
    	token_type: payload.token_type,
    	expires_in: payload.expires_in
	}
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
        <logger level="DEBUG" doc:name="End Logger" doc:id="7d4900e3-d1a8-40d5-89c9-3bbaf4d3894f" message="#[%dw 2.0 output application/json --- vars.logHeader ++ {&quot;event&quot;: &quot;End flow Do Auth&quot;}]" category="com.ase.ism.diagnostics" />
    </flow>
    <!-- 
    	********************************************************************************
    	**		GET ACCOUNTS FLOW    					         					  **
    	********************************************************************************
	-->
    <flow name="get:\accounts:password-manager-api-router">
        <logger level="DEBUG" doc:name="Start Logger" doc:id="625f8518-93c5-4bf1-9ae6-b467798520fe" message="#[%dw 2.0 output application/json --- vars.logHeader ++ {&quot;event&quot;: &quot;Start flow Get Accounts&quot;}]" category="com.ase.ism.diagnostics" />
        <ee:transform doc:name="Set domain, returnFullResponse, encryptedFileFullPath" doc:id="58ce2dba-b1c7-4b6a-9bf4-163a337ed094">
            <ee:message />
            <ee:variables>
                <ee:set-variable variableName="domain"><![CDATA[%dw 2.0
output application/java
---
attributes.queryParams.domain default null]]></ee:set-variable>
                <ee:set-variable variableName="returnFullResponse"><![CDATA[%dw 2.0
output application/java
---
attributes.queryParams.return_full_response as Boolean default false]]></ee:set-variable>
                <ee:set-variable variableName="encryptedFileFullPath"><![CDATA[%dw 2.0
output application/java

import java!ro::ase::ism::crypto::MessageDigestUtils
import java!ro::ase::ism::crypto::CryptoUtils
---
CryptoUtils::byteToBase64(MessageDigestUtils::getStringHash(vars.credentials.client_id, "SHA-256"))]]></ee:set-variable>
            </ee:variables>
        </ee:transform>
        <java:new class="ro.ase.ism.entities.Credentials" constructor="Credentials(String, String)" target="credentialsClass" doc:name="New Credentials">
            <java:args><![CDATA[#[{
	clientId: vars.credentials.client_id as String,
	clientSecret: vars.credentials.client_secret as String
}]]]></java:args>
        </java:new>
        <try doc:name="Try" doc:id="24c8fad8-3f41-4217-8598-2ce4e2ea548a">
            <s3:get-object doc:name="Get Object" doc:id="d3b3b9c3-88c8-438a-afa6-98da5a2b498f" config-ref="amazon-s3-config" bucketName="ism-account-files-bucket" key="#[vars.encryptedFileFullPath]" target="cipherText" />
            <error-handler>
                <on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="b3944b9e-fcc4-4329-8238-1115bb4593ef" type="ANY">
                    <logger level="DEBUG" doc:name="Info Logger" doc:id="ea812553-6603-4624-bf07-073bc68e2303" message="#[%dw 2.0 output application/json --- vars.logHeader ++ {&quot;event&quot;: &quot;Encrypted file not found.&quot;}]" category="com.ase.ism.diagnostics" />
                </on-error-propagate>
            </error-handler>
        </try>
        <java:invoke-static doc:name="getAccounts" doc:id="c91185b5-400e-462c-b448-988f306cdc14" class="ro.ase.ism.services.AccountServices" method="getAccounts(ro.ase.ism.entities.Credentials,java.lang.String,java.lang.String,boolean)">
            <java:args><![CDATA[#[{
	credentials: vars.credentialsClass,
	cipherText: vars.cipherText as String,
	domain: vars.domain,
	returnFullResponse: vars.returnFullResponse
}]]]></java:args>
        </java:invoke-static>
        <ee:transform doc:name="Set response">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json

import java!ro::ase::ism::services::AccountServices
import java!ro::ase::ism::entities::Account
---
{
  meta: {
    status: "succeeded",
    messages: [
      {
        code: "OK",
        text: "Request was successful",
        level: "info"
      }
    ]
  },
  data: payload 
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
        <logger level="DEBUG" doc:name="End Logger" doc:id="e8b4c02d-fc97-4d75-aee0-532040ff7973" message="#[%dw 2.0 output application/json --- vars.logHeader ++ {&quot;event&quot;: &quot;End flow Get Accounts&quot;}]" category="com.ase.ism.diagnostics" />
    </flow>
    <!-- 
    	********************************************************************************
    	**		POST ACCOUNT FLOW     					         					  **
    	********************************************************************************
	-->
    <flow name="post:\accounts:application\json:password-manager-api-router">
        <logger level="DEBUG" doc:name="Start Logger" doc:id="9bbba4fa-f491-467b-90bc-6189184f1464" message="#[%dw 2.0 output application/json --- vars.logHeader ++ {&quot;event&quot;: &quot;Start flow Do Account&quot;}]" category="com.ase.ism.diagnostics" />
        <set-variable value="#[%dw 2.0 output application/java import java!ro::ase::ism::crypto::MessageDigestUtils import java!ro::ase::ism::crypto::CryptoUtils --- CryptoUtils::byteToBase64(MessageDigestUtils::getStringHash(vars.credentials.client_id, &quot;SHA-256&quot;))]" doc:name="Set encryptedFileFullPath" doc:id="d85941c2-1c6a-4547-af3c-66e5c0903f0d" variableName="encryptedFileFullPath" />
        <java:new constructor="Credentials(String, String)" doc:name="New Credentials" doc:id="0e990339-3674-4c5d-9620-5f5a890ba820" class="ro.ase.ism.entities.Credentials" target="credentialsClass">
            <java:args><![CDATA[#[{
	clientId: vars.credentials.client_id as String,
	clientSecret: vars.credentials.client_secret as String
}]]]></java:args>
        </java:new>
        <try doc:name="Try" doc:id="902833e4-e7cb-4ac0-8c52-cc762c4a5b8b">
            <s3:get-object doc:name="Get Object" doc:id="1b27d8a4-723a-497c-9f25-fadb6ceb8bd8" config-ref="amazon-s3-config" bucketName="ism-account-files-bucket" key="#[vars.encryptedFileFullPath]" target="cipherText" />
            <error-handler>
                <on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="dd692189-4023-48df-a0c8-40106d7d3188" type="ANY">
                    <logger level="DEBUG" doc:name="Info Logger" doc:id="6d52f3f5-3bc6-47c0-ac03-5f90f8a10feb" message="#[%dw 2.0 output application/json --- vars.logHeader ++ {&quot;event&quot;: &quot;Encrypted file not found. Creating...&quot;}]" category="com.ase.ism.diagnostics" />
                    <s3:put-object doc:name="Put Object" doc:id="78170c53-b815-4dd3-a5de-ff104279628d" config-ref="amazon-s3-config" bucketName="ism-account-files-bucket" key="#[vars.encryptedFileFullPath]">
                        <s3:content><![CDATA[#[%dw 2.0
output application/java

import java!ro::ase::ism::services::AccountServices
---
AccountServices::initAccountFile(vars.credentialsClass)]]]></s3:content>
                    </s3:put-object>
                    <s3:get-object doc:name="Get Object" doc:id="4d3bdd9c-9aed-4e5f-a54e-40020195194b" config-ref="amazon-s3-config" bucketName="ism-account-files-bucket" key="#[vars.encryptedFileFullPath]" target="cipherText" />
                </on-error-continue>
            </error-handler>
        </try>
        <java:new doc:name="New Account" doc:id="4ac35ee6-cefe-4bfb-9464-fc598d9aed53" class="ro.ase.ism.entities.Account" target="accountClass" constructor="Account(String, String, ArrayList, String)">
            <java:args><![CDATA[#[{
  username: vars.inputPayload.username,
  password: vars.inputPayload.password,
  tags: vars.inputPayload.tags default [],
  domain: vars.inputPayload.domain
}]]]></java:args>
        </java:new>
        <java:invoke-static method="addAccount(ro.ase.ism.entities.Credentials,java.lang.String,ro.ase.ism.entities.Account)" doc:name="addAccounts" doc:id="f986d311-cda2-42ff-b8ec-4292134acb1f" class="ro.ase.ism.services.AccountServices">
            <java:args><![CDATA[#[{
	credentials: vars.credentialsClass,
	cipherText: vars.cipherText,
	account: vars.accountClass
}]]]></java:args>
        </java:invoke-static>
        <s3:put-object doc:name="Put Object" doc:id="228f8c67-0263-4920-84a7-db09e33356e2" config-ref="amazon-s3-config" bucketName="ism-account-files-bucket" key="#[vars.encryptedFileFullPath]">
            <s3:content><![CDATA[#[%dw 2.0
output application/java

import java!ro::ase::ism::services::AccountServices
---
payload]]]></s3:content>
        </s3:put-object>
        <ee:transform doc:name="Set response">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
  meta: {
    status: "succeeded",
    messages: [
      {
        code: "Created",
        text: "New resource was created",
        level: "info"
      }
    ]
  }
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
        <logger level="DEBUG" doc:name="End Logger" doc:id="159b84f8-d8de-45cf-931d-39e3297c4186" message="#[%dw 2.0 output application/json --- vars.logHeader ++ {&quot;event&quot;: &quot;End flow Do Account&quot;}]" category="com.ase.ism.diagnostics" />
    </flow>
	<!-- 
    	********************************************************************************
    	**		DELETE ACCOUNT FLOW     					             			  **
    	********************************************************************************
	-->
    <flow name="delete:\accounts\(identifier):password-manager-api-router">
        <logger level="DEBUG" doc:name="Start Logger" doc:id="64875df3-0d8d-4751-a0f1-7ac04902b592" message='#[%dw 2.0 output application/json --- vars.logHeader ++ {"event": "Start flow Delete Account"}]' category="com.ase.ism.diagnostics" />
		<ee:transform doc:name="Set identifier, encryptedFileFullPath">
            <ee:variables>
                <ee:set-variable variableName="identifier"><![CDATA[attributes.uriParams.'identifier']]></ee:set-variable>
				<ee:set-variable variableName="encryptedFileFullPath" ><![CDATA[%dw 2.0
output application/java

import java!ro::ase::ism::crypto::MessageDigestUtils
import java!ro::ase::ism::crypto::CryptoUtils
---
CryptoUtils::byteToBase64(MessageDigestUtils::getStringHash(vars.credentials.client_id, "SHA-256"))]]></ee:set-variable>
            </ee:variables>
        </ee:transform>
        <java:new constructor="Credentials(String, String)" doc:name="New Credentials" doc:id="4f55a580-a473-4fbc-8e51-24ac5fa663fc" class="ro.ase.ism.entities.Credentials" target="credentialsClass">
			<java:args><![CDATA[#[{
	clientId: vars.credentials.client_id as String,
	clientSecret: vars.credentials.client_secret as String
}]]]></java:args>
		</java:new>
		<try doc:name="Try" doc:id="4803ad7a-7eb9-45e5-a1fd-ed10851779e2">
			<s3:get-object doc:name="Get Object" doc:id="6845db2e-b511-4b9c-8ef1-cd2fcbb5e63b" config-ref="amazon-s3-config" bucketName="ism-account-files-bucket" key="#[vars.encryptedFileFullPath]" target="cipherText" />
			<error-handler>
				<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="eea59db6-ea6a-40ed-a4ce-200b41310dcb" type="ANY">
					<logger level="DEBUG" doc:name="Info Logger" doc:id="c271126f-12c3-41d2-96c6-dcaaaf3b2e26" message='#[%dw 2.0 output application/json --- vars.logHeader ++ {"event": "Encrypted file not found."}]' category="com.ase.ism.diagnostics" />
				</on-error-propagate>
			</error-handler>
		</try>
		<java:invoke-static method="deleteAccount(ro.ase.ism.entities.Credentials,java.lang.String,java.lang.String)" doc:name="deleteAccounts" doc:id="a54f2d0d-5f6e-4313-896b-a077043598f1" class="ro.ase.ism.services.AccountServices">
			<java:args><![CDATA[#[{
	credentials: vars.credentialsClass,
	cipherText: vars.cipherText,
	identifier: vars.identifier
}]]]></java:args>
		</java:invoke-static>
		<s3:put-object doc:name="Put Object" doc:id="3c239238-0dda-4cc4-b2ca-f28b7e7c456c" config-ref="amazon-s3-config" bucketName="ism-account-files-bucket" key="#[vars.encryptedFileFullPath]">
			<s3:content><![CDATA[#[%dw 2.0
output application/java

---
payload]]]></s3:content>
		</s3:put-object>
		<ee:transform doc:name="Set response" doc:id="981ec82c-9a2e-43c7-b540-faf3996a1fa4">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
  meta: {
    status: "succeeded",
    messages: [
      {
        code: "No Content",
        text: "Account has been deleted",
        level: "info"
      }
    ]
  }
}]]></ee:set-payload>
            </ee:message>
			<ee:variables >
			</ee:variables>
        </ee:transform>
		<logger level="DEBUG" doc:name="End Logger" doc:id="97e25069-3682-4144-8b06-9729eb3e6b33" message='#[%dw 2.0 output application/json --- vars.logHeader ++ {"event": "End flow Delete Account"}]' category="com.ase.ism.diagnostics" />
    </flow>
    <!-- 
    	********************************************************************************
    	**		TOKEN VALDATION FLOW    					         	     		  **
    	********************************************************************************
	-->
	<flow name="password-manager-api-token-validation" doc:id="16968744-2ce2-4191-9e23-c7baf18bdc90">
        <http:listener doc:name="Listener" doc:id="89b94367-403c-4f26-83ee-e020f3f2dbb2" config-ref="password-manager-api-https" path="/validate" />
        <logger level="DEBUG" doc:name="Start Logger" doc:id="7501e001-4d89-481e-8e2d-6aa355fb6709" message="#[%dw 2.0 output application/json --- {&quot;event&quot;: &quot;Validation flow started&quot;}]" category="com.ase.ism.diagnostics" />
        <oauth2-provider:validate-token doc:name="Validate token" doc:id="969b88db-70b2-4b3c-ba2a-1b2545be0e7f" config-ref="oauth2-provider-config" />
        <ee:transform doc:name="Set payload" doc:id="e1361df9-6106-4dfb-bca5-57accf0a9449">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
            </ee:message>
        </ee:transform>
        <logger level="DEBUG" doc:name="End Logger" doc:id="dd30e084-851a-46ee-b681-1f0877042d3b" message="#[%dw 2.0 output application/json --- {&quot;event&quot;: &quot;End flow Validation&quot;}]" category="com.ase.ism.diagnostics" />
    </flow>
</mule>
